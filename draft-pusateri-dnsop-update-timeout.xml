<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
    which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
    There has to be one entity for each item to be referenced. 
    An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC1035 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC1995 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1995.xml">
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2136 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC3339 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3339.xml">
<!ENTITY RFC3597 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3597.xml">
<!ENTITY RFC4034 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4034.xml">
<!ENTITY RFC5936 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5936.xml">
<!ENTITY RFC6763 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY RFC8174 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY I-D.sekar-dns-ul SYSTEM  "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.sekar-dns-ul.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
    please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
    (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
    (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-pusateri-dnsop-update-timeout-02" ipr="trust200902">
 <!-- category values: std, bcp, info, exp, and historic
    ipr values: trust200902, noModificationTrust200902, noDerivativesTrust200902,
       or pre5378Trust200902
    you can add the attributes updates="NNNN" and obsoletes="NNNN" 
    they will automatically be output with "(if approved)" -->

 <!-- ***** FRONT MATTER ***** -->

 <front>
   <!-- The abbreviated title is used in the page header - it is only necessary if the 
        full title is longer than 39 characters -->

   <title abbrev="TIMEOUT Resource Record">DNS TIMEOUT Resource Record</title>

   <!-- add 'role="editor"' below for the editors if appropriate -->

   <!-- Another author who claims to be an editor -->

   <author fullname="Tom Pusateri" initials="T.J." surname="Pusateri">
     <organization>Unaffiliated</organization>

     <address>
       <postal>
         <street></street>
         <city>Raleigh</city>
         <region>NC</region>
         <code></code>
         <country>USA</country>
       </postal>

       <email>pusateri@bangj.com</email>

       <!-- uri and facsimile elements may also be added -->
     </address>
   </author>
   <author fullname="Tim Wattenberg" initials="T." surname="Wattenberg">
     <organization>Unaffiliated</organization>

     <address>
       <postal>
         <street></street>
         <city>Cologne</city>
         <country>Germany</country>
       </postal>

       <email>mail@timwattenberg.de</email>

       <!-- uri and facsimile elements may also be added -->
     </address>
   </author>

   <date year="2019"/>

   <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
        in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

   <!-- Meta-data Declarations -->

   <area>DNSOP</area>

   <workgroup>Internet Engineering Task Force</workgroup>

   <!-- WG name at the upperleft corner of the doc,
        IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
        which is used by the RFC Editor as a nod to the history of the IETF. -->

   <keyword>dns update timeout</keyword>

   <!-- Keywords will be incorporated into HTML output
        files in a meta tag but they have no effect on text or nroff
        output. If you submit your draft to the RFC Editor, the
        keywords will be used for the search engine. -->

   <abstract>
	   <t>This specification defines a new DNS TIMEOUT resource record (RR) that associates a lifetime with one or more zone resource records with the same owner name, type, and class. It is intended to be used to transfer resource record lifetime state between a zone's primary and secondary servers and to store lifetime state during server software restarts.</t>
   </abstract>
 </front>

 <middle>
   <section title="Introduction">
	   <t>DNS Update <xref target="RFC2136"/> provides a mechanism to dynamically add/remove DNS resource records to/from a zone. When a resource record is dynamically added, it remains in the zone until it is removed manually or via a subsequent DNS Update. A zone administrator may want to enforce a default lifetime for dynamic updates (such as the DHCP lease lifetime) or the DNS Update may contain a lifetime using an EDNS(0) Update Lease option <xref target="I-D.sekar-dns-ul"/>. However, this lease lifetime is not communicated to secondary servers and will not endure through server software restarts. Therefore, this specification defines a new DNS TIMEOUT resource record that associates a lifetime with one or more resource records with the same owner name, type, and class that can be transferred to secondary servers through normal AXFR <xref target="RFC5936"/>, IXFR <xref target="RFC1995"/> transfer mechanisms.</t>
     <t>An UPDATE lifetime could be stored in a proprietary database on an authoritative primary server but there is an advantage to saving it as a resource record: redundant master servers and secondary servers capable of taking over as the primary server for a zone automatically can benefit from the existing database synchronization of resource records. In addition, primary and secondary servers from multiple vendors can synchronize the lifetimes through the open format provided by a resource record.</t>
   </section>
   <section title="Requirements Language">
     <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when,
   and only when, they appear in all
   capitals, as shown here.  These words may also appear in this
   document in lower case as plain English words, absent their normative
   meanings.</t>
   </section>
   <section title="Sources of TIMEOUT Expiry Time">
     <t>The expire time may come from many different sources. A few are listed here however, this list is not considered complete.
       <list style="numbers">
         <t>Via DHCP Dynamic Lease Lifetime communicated out of band.</t>
         <t>Via EDNS(0) Update Lease option <xref target="I-D.sekar-dns-ul"/> communicated in DNS Update.</t>
         <t>Via an administrative default server value such as one day (86400 seconds).</t>
       </list>
     </t>
   </section>
   <section title="Resource Record Composition">
	   <t>TIMEOUT resource records provide expiry times for a mixed variety of resource record types with the same owner name, type, and class. Since there could exist multiple records of the same record type with the same owner name and class, the TIMEOUT resource record must be able to identify each of these records individually with only different RDATA. As an example, PTR records for service discovery <xref target="RFC6763"/> provide a level of indirection to SRV and TXT records by instance name. The instance name is stored in the PTR RDATA and multiple PTR records with the same owner name but only differing RDATA often exist.</t>
	   <t>In order to distinguish each individual record with potentially different expiry times, the TIMEOUT resource record contains an exipry time, the record type, a method to identify the actual records for which the expiry time applies, and a count of the number of records represented. Multiple TIMEOUT records with the same owner name and class are created for each expiry time, record type, and resource record representation. If the expiry time is the same, multiple records can be combined into a single TIMEOUT record with the same owner name, class, and record type but this is NOT REQUIRED.</t>
     <t>The fields and their values in a TIMEOUT record are defined as:</t>
     <section title="Represented Record Type">
       <t>A 16-bit field containing the resource record type to which the TIMEOUT record applies. Multiple TIMEOUT records for the same owner name, class, and represented type can exist.</t>
     </section>
     <section title="Represented Record Count">
       <t>The Represented Record Count is a 8-bit value that specifies the number of records of the specified record type with this expiry time.</t>
       <t>An RR Count of zero indicates that it is not necessary to represent any records in the list. This is a shortcut notation meaning all resource records with the same owner name, class, and record type use the same Expiry Time. There MUST be only one TIMEOUT record for the same owner name, class, and record type if the Represented Record Count is zero. If an additional TIMEOUT record exists with the same owner name, class, and record type, it MUST be ignored and SHOULD be removed. When the Represented Record Count is 0, the Method Identifer is set to NO METHOD (0) on transmission and ignored on reception.</t>
       <t>In the unlikely event that the Represented Record Count exceeds 255 which is the largest number representable in 8 bits, multiple instances of the same Expiry Time can exist.</t>
     </section>
     <section title="Method Identifiers">
       <t>The Method Identifier is a 8-bit value that specifies an identifier for the algorithm used to distinguish between resource records. The identifiers are declared in a registry maintained by IANA for the purpose of listing acceptable methods for this purpose. In addition to the method and the index, the registry MAY contain a fixed output length in bits of the method to be used or the term variable to denote a variable length output per record. It is conceivable, though not likely, that the same method could be used with different fixed output lengths. In this case, each fixed output length would require a different identifier in the registry. Additions to this registry will be approved with additional documentation under expert review. At the time that the registry is created by IANA, a group of expert reviewers will be established.</t>
       <t>Additional methods of representing records such as hashes or other algorithms may be defined in the future.</t>
       <section title="NO METHOD" anchor="nomethod">
         <t>The method identifier of 0 is defined as <spanx style="verb">NO METHOD</spanx> and MUST NOT be used if the represented record count is greater than 0. The value of 0 is to be included in the IANA registry of method identifier values.</t>
       </section>
       <section title="RDATA" anchor="rdatamethod">
         <t>The method identifier of 1 is defined as <spanx style="verb">RDATA</spanx>. It begins with the RDATA length as a 16-bit value containing the length of the RDATA in bytes followed by the number of bytes of RDATA as appears in the record being represented. The record MUST be in canonical DNSSEC form as described in Section 6 of <xref target="RFC4034"/>.</t>
       </section>
     </section>
     <section title="Expiry Time">
       <t>The expiry time is a 64-bit number expressed as the number of seconds since the UNIX epoch (00:00:00 UTC on January 1, 1970). This value is an absolute time at which the record will expire. Lease times must be converted to an absolute expiry time when received.</t>
     </section>
   </section>
   <section title="TIMEOUT RDATA Wire Format">
     <t>The TIMEOUT resource record follows the same pattern as other DNS resource records as defined in Section 3.2.1 of <xref target="RFC1035"/> including owner name, type, class, TTL, RDATA length, and RDATA.</t>
     <t>The RDATA section of the resource record with method identifier RDATA (1) is illustrated in <xref target="rr_art"/>:</t>
     <figure align="center" anchor="rr_art" title="Method (1) RDATA Wire Format">
        <artwork align="center">
        <![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|      Represented RR Type      |   Count (n)   |   Method (1)  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                       Expiry Time (64-bit)                    |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.    Represented RDATA LEN 1    |                               .
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               .
.                                                               .
.                     Represented RDATA 1                       .
.                                                               .
.                                                               .
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.    Represented RDATA LEN n    |                               .
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               .
.                                                               .
.                     Represented RDATA n                       .
.                                                               .
.                                                               .
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        ]]>
        </artwork>
      </figure>
      <t><xref target="rr_art"/> represents an arbitrary number of represented records with the same owner name, class, and represented type. For each expiry time, a list of RDATA length and RDATA pairs are attached. The overall RDATA length of the TIMEOUT record indicates when the last represented record is contained in the record.</t>
      <t>The RDATA section of the resource record with method identifier NO METHOD (0) is illustrated in <xref target="rr_art2"/>:</t>
      <figure align="center" anchor="rr_art2" title="Method (0) RDATA Wire Format">
         <artwork align="center">
         <![CDATA[
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |      Represented RR Type      |   Count (0)   |   Method (0)  |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                       Expiry Time (64-bit)                    |
 |                                                               |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
         ]]>
         </artwork>
       </figure>
       <t><xref target="rr_art2"/> represents the TIMEOUT RDATA field of all matching records of the represented type for the same owner name and class.</t>
   </section>
   <section title="Primary Server Behavior">
     <t>A TIMEOUT resource record MUST be removed when the last resource record it covers has been removed. This may be due to the record expiring (reaching the expiry time) or due to a subsequent DNS Update or administrative action.</t>
     <t>Upon receiving any DNS UPDATE deleting resource records that might have been covered by a TIMEOUT RR, a primary server MUST remove all represented records in all of the TIMEOUT records with the same owner name, class, and represented type.</t>
     <t>As a reminder from Section 3.3.13 of <xref target="RFC1035"/>, the MINIMUM field of the SOA for the zone is used as a lower bound of the TTL for all records in the zone. Therefore, even if the TIMEOUT record will expire in less time than the MINIMUM, the TTL is still set to the MINIMUM for records covered by the TIMEOUT record and the TIMEOUT record itself when a response is returned by an authoritative server. The TIMEOUT RR is mostly for the benefit of the authoritative server to know when to remove the records. The fact that some records might live longer in the cache of a resolver is no different than other records that might get removed while still in a remote resolver cache.</t>
   </section>
   <section title="Secondary Server Behavior">
     <t>A secondary server may or may not understand TIMEOUT resource records. If a secondary server does not understand them, they are treated like any other resource record that the server may not understand <xref target="RFC3597"/>.</t>
     <t>A secondary server MUST NOT expire the records in a zone it maintains covered by the TIMEOUT resource record and it MUST NOT expire the TIMEOUT resource record itself when the last record it covers has expired. The secondary server MUST always wait for the records to be removed or updated by the primary server.</t>
   </section>
   <section title="TIMEOUT RDATA Presentation Format">
     <t>
       <list style="hanging" hangIndent="6">
         <t hangText="Record Type:">
           <vspace />
           resource record type mnemonics.  When the mnemonic is unknown, the TYPE representation described in Section 5 of <xref target="RFC3597"/></t>
         <t hangText="Represented Record Count:">
           <vspace />
           unsigned decimal integer (0-255)</t>
         <t hangText="Method Identifier:">
           <vspace />
           unsigned decimal integer (0-255)</t>
         <t hangText="Expiry Time:">
           <vspace />
	   The Expiry Time is displayed as a compact numeric-only representation of ISO 8601. All punctuation is removed. This form is slightly different than the recommendation in <xref target="RFC3339"/> but is common for DNS protocols. It is defined in Section 3.2 of <xref target="RFC4034"/> as YYYYMMDDHHmmSS in UTC. This form will always be exactly 14 digits since no component is optional.
           <vspace />
           <vspace />
      YYYY is the year;
           <vspace />
      MM is the month number (01-12);
           <vspace />
      DD is the day of the month (01-31);
           <vspace />
      HH is the hour, in 24 hour notation (00-23);
           <vspace />
      mm is the minute (00-59); and
           <vspace />
      SS is the second (00-59).
	       </t>
         <t hangText="RDATA Length:">
           <vspace />
           unsigned decimal integer</t>
         <t hangText="RDATA:">
           <vspace />
           record type specific</t>
       </list>
     </t>
     <t><vspace blankLines='999' /></t>
   </section>
   <section anchor="IANA" title="IANA Considerations">
       <t>This document defines a new DNS Resource Record Type named TIMEOUT to be exchanged between authoritative primary and secondary DNS servers. It is assigned out of the DNS Parameters Resource Record (RR) Type registry. The value for the TIMEOUT resource record type is TBA.</t>
       <t>This document establishes a new registry of DNS TIMEOUT Resource Record Method Identifier values. The registry shall include a numeric identifier, a method name, a description of the method, and the length of the output function in bits or the keyword <spanx style="verb">variable</spanx>. The identifier is to be used in the RDATA section of the TIMEOUT resource record.</t>
       <texttable anchor="table_algs" title="TIMEOUT RR Method Identifier values">
           <ttcol align='center' width='8%'>ID</ttcol>
           <ttcol align='left' width='18%'>Method Name</ttcol>
           <ttcol align='left' width='20%'>Description</ttcol>
           <ttcol align='center' width='20%'>Length (bits)</ttcol>
           <ttcol align='left'>Definition</ttcol>
           <c>0</c>
           <c>NO METHOD</c>
           <c>All records match</c>
           <c>0</c>
           <c><xref target="nomethod"/></c>
           <c>1</c>
           <c>RDATA</c>
           <c>Actual RDATA of represented records</c>
           <c>variable</c>
           <c><xref target="rdatamethod"/></c>
       </texttable>
   </section>

   <section anchor="Security" title="Security Considerations">
     <t>There is no secure relationship between a TIMEOUT resource record and the represented resource records it applies to. TIMEOUT records should typically only apply to resource records created through the UPDATE mechanism. Protection for permanent resource records in a zone is advisable.</t>
     <t>Authenticated UPDATE operations MUST be REQUIRED at authoritative name servers supporting TIMEOUT resource records.</t>
   </section>

   <section anchor="Acknowledgments" title="Acknowledgments">
     <t>This idea was motivated through conversations with Mark Andrews. Thanks to Mark as well as Paul Vixie, Joe Abley, Ted Lemon, Tony Finch, Robert Story, Paul Wouters, and Dick Franks for their suggestions, review, and comments.</t>
   </section>
 </middle>

 <!--  *****BACK MATTER ***** -->

 <back>
   <references title="Normative References">
     <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
     &RFC1035;
     &RFC2119;
     &RFC3339;
     &RFC3597;
     &RFC4034;
     &RFC8174;
   </references>
   <references title="Informative References">
     <!-- Here we use entities that we defined at the beginning. -->
     &RFC1995;
     &RFC2136;
     &RFC5936;
     &RFC6763;
     &I-D.sekar-dns-ul;
   </references>
   <section title="Example TIMEOUT resource records">
     <t>The following example shows sample TIMEOUT resource records based on DNS UPDATEs containing A and AAAA address records plus the corresponding PTR records.</t>
     <t>A host sending a name registration at time Tn for <spanx style="verb">A</spanx> and <spanx style="verb">AAAA</spanx> records with lease lifetime Ln would have a series of UPDATEs (one for each zone) that contain:</t>
     <texttable anchor="address_update" title="Example Address Records Update">
         <ttcol align='left' width='50%'>Name</ttcol>
         <ttcol align='left'>RR Type</ttcol>
         <ttcol align='left'>Value</ttcol>
         <c>name.exmpl.com.</c>
         <c>A</c>
         <c>192.0.2.5</c>
         <c>name.exmpl.com.</c>
         <c>AAAA</c>
         <c>12001:db8::5</c>
         <c>5.2.0.192.in-addr.arpa.</c>
         <c>PTR</c>
         <c>name.exmpl.com.</c>
         <c>5.0.0.0.0.0.0.0.0.0.0.0.b8.0d.01.20.ip6.arpa. (bytes)</c>
         <c>PTR</c>
         <c>name.exmpl.com.</c>
     </texttable>
     <t>Next, consider the TIMEOUT resource records that would be generated for the records in <xref target="address_update"/>. Notice that none of the 4 TIMEOUT records on the server would require a hash:</t>
     <texttable anchor="address_timeout" title="Address TIMEOUT records">
         <ttcol align='left' width='40%'>Owner Name</ttcol>
         <ttcol align='left'>For Type</ttcol>
         <ttcol align='left'>Count</ttcol>
         <ttcol align='left'>Method</ttcol>
         <ttcol align='left'>Expiration</ttcol>
         <c>name.exmpl.com.</c>
         <c>A</c>
         <c>0</c>
         <c>0</c>
         <c>Tn + Ln</c>
         <c>name.exmpl.com.</c>
         <c>AAAA</c>
         <c>0</c>
         <c>0</c>
         <c>Tn + Ln</c>
         <c>5.2.0.192.in-addr.arpa.</c>
         <c>PTR</c>
         <c>0</c>
         <c>0</c>
         <c>Tn + Ln</c>
         <c>5.0.0.0.0.0.0.0.0.0.0.0.b8.0d.01.20.ip6.arpa. (bytes)</c>
         <c>PTR</c>
         <c>0</c>
         <c>0</c>
         <c>Tn + Ln</c>
     </texttable>
     <t>Next, assume there are two hosts advertising the same service type (different service types will have different owner names). We will use _ipp._tcp.exmpl.com as an example.</t>
     <t>Host A sends an UPDATE at time Ta with lease life La for PTR, SRV, A, AAAA, and TXT records. Host B sends an UPDATE at time Tb with lease life Lb for PTR, SRV, A, and TXT records.</t>
      <texttable anchor="ipp_host_a" title="DNS UPDATE from Host A">
          <ttcol align='left' width='50%'>Owner name</ttcol>
          <ttcol align='left'>RR Type</ttcol>
          <ttcol align='left'>Value</ttcol>
          <c>_ipp._tcp.exmpl.com.</c>
          <c>PTR</c>
          <c>p1._ipp._tcp.exmpl.com.</c>
          <c>p1._ipp._tcp.exmpl.com.</c>
          <c>SRV</c>
          <c>0 0 631 p1.exmpl.com.</c>
          <c>p1._ipp._tcp.exmpl.com.</c>
          <c>TXT</c>
          <c>paper=A4</c>
          <c>p1.exmpl.com.</c>
          <c>A</c>
          <c>192.0.2.1</c>
          <c>p1.exmpl.com.</c>
          <c>AAAA</c>
          <c>2001:db8::1</c>
      </texttable>
      <texttable anchor="ipp_host_b" title="DNS UPDATE from Host B">
          <ttcol align='left' width='50%'>Owner name</ttcol>
          <ttcol align='left'>RR Type</ttcol>
          <ttcol align='left'>Value</ttcol>
          <c>_ipp._tcp.exmpl.com.</c>
          <c>PTR</c>
          <c>p2._ipp._tcp.exmpl.com.</c>
          <c>p2._ipp._tcp.exmpl.com.</c>
          <c>SRV</c>
          <c>0 0 631 p2.exmpl.com.</c>
          <c>p2._ipp._tcp.exmpl.com.</c>
          <c>TXT</c>
          <c>paper=B4</c>
          <c>p2.exmpl.com.</c>
          <c>A</c>
          <c>192.0.2.2</c>
      </texttable>
      <t>For these printer registrations, the TIMEOUT records on the server would look like the following:</t>
      <texttable anchor="printer_timeout" title="Service TIMEOUT records">
          <ttcol align='left' width='46%'>Owner Name</ttcol>
          <ttcol align='left' width='6%'>For Type</ttcol>
          <ttcol align='left'>Count</ttcol>
          <ttcol align='left' width='5%'>Method</ttcol>
          <ttcol align='left' width='36%'>Expire /          RDLEN RDATA</ttcol>
          <c>_ipp.tcp.exmpl.com.</c>
          <c>PTR</c>
          <c>1</c>
          <c>1</c>
          <c>Ta + La 25 p1._ipp._tcp.exmpl.com.</c>
          <c></c>
          <c></c>
          <c>1</c>
          <c>1</c>
          <c>Tb + Lb 25 p2._ipp._tcp.exmpl.com.</c>
          <c>p1._ipp._tcp.exmpl.com.</c>
          <c>SRV</c>
          <c>0</c>
          <c>0</c>
          <c>Ta + La</c>
          <c>p1._ipp._tcp.exmpl.com.</c>
          <c>TXT</c>
          <c>0</c>
          <c>0</c>
          <c>Ta + La</c>
          <c>p2._ipp._tcp.exmpl.com.</c>
          <c>SRV</c>
          <c>0</c>
          <c>0</c>
          <c>Tb + Lb</c>
          <c>p2._ipp._tcp.exmpl.com.</c>
          <c>TXT</c>
          <c>0</c>
          <c>0</c>
          <c>Tb + Lb</c>
          <c>p1.exmpl.com.</c>
          <c>A</c>
          <c>0</c>
          <c>0</c>
          <c>Ta + La</c>
          <c>p1.exmpl.com.</c>
          <c>AAAA</c>
          <c>0</c>
          <c>0</c>
          <c>Ta + La</c>
          <c>p2.exmpl.com.</c>
          <c>A</c>
          <c>0</c>
          <c>0</c>
          <c>Tb + Lb</c>
      </texttable>
   </section>
 </back>
</rfc>
